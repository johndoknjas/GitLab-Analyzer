plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.7'
    id 'org.springframework.boot' version '2.2.0.RELEASE'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

// Fixes issue where main.java is set as source root
sourceSets {
    main {
        java {
            srcDirs 'src'
        }
    }
}


dependencies {
    implementation 'org.projectlombok:lombok:1.18.16'

//    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    implementation 'org.gitlab:java-gitlab-api:4.1.1'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
//    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'com.google.code.gson:gson:2.8.5'
    /*
    Fixes issues error: package org.junit does not exist import org.junit.Test
    from suggested solution: https://stackoverflow.com/questions/42677526/gradle-compilejava-error-package-org-junit-does-not-exist
     */
    testImplementation 'junit:junit:4.12'
    implementation 'junit:junit:4.12'

}

apply plugin : "java"

ext {
    // package was renamed, so fix run task build by naming package main.java with Main
    javaMainPointer = "main.java"
}

application {
    mainClassName = javaMainPointer
}

javafx {
    modules = [ 'javafx.controls', 'javafx.fxml' ]
    version = '11.0.2'
}

test{
    useJUnit()
    testLogging.showStandardStreams = true
    failFast = true
}
